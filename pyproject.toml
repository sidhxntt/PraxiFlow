[project]
name = "supabase-django-project_2"
version = "0.1.0"
description = "Django project with Supabase backend again"
authors = [
    {name = "Siddhant", email = "siddhantg2002@gmail.com"},
]
license = {text = "MIT"}
requires-python = ">=3.10"

dependencies = [
    # Core Django
    "django>=4.2.0",
    "djangorestframework>=3.16.0",
    "djangorestframework-simplejwt>=5.5.0",
    "psycopg2-binary>=2.9.10",
    "python-dotenv>=1.1.0",
    "pytz>=2025.2",

    # Database & Search
    "dj-database-url>=2.3.0",
    "django-elasticsearch-dsl>=8.0",
    "django-filter>=25.1",

    # Monitoring & Performance
    "django-prometheus>=2.3.1",
    "sentry-sdk[django]>=2.27.0",
    "django-health-check>=3.18.3",

    # Storage & Media
    "django-storages>=1.14.6",
    "boto3>=1.38.7",
    "pillow>=11.2.1",

    # Async & Caching
    "celery>=5.5.2",
    "redis>=6.1.0",
    "django-redis>=5.4.0",
    "django-celery-results>=2.6.0",

    # API & Documentation
    "drf-spectacular>=0.28.0",

    # Security & Headers
    "django-cors-headers>=4.7.0",

    # Utilities
    "faker>=37.1.0",
    "whitenoise>=6.9.0",
    "geoip2>=5.0.1",
    "colorama>=0.4.6",
    "django-allauth[socialaccount]>=65.8.1",
    "dj-rest-auth>=7.0.1",
    "cryptography>=45.0.2",
    "gunicorn>=23.0.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
# Development
dev = "python src/manage.py runserver 4000"
prod = "pdm run gunicorn src.core.wsgi:application --bind 0.0.0.0:4000 --workers 3"
docker_dev = "python src/manage.py runserver 0.0.0.0:4000"
docker_prod = "pdm run gunicorn src.core.wsgi:application --bind 0.0.0.0:4000 --workers 3"
shell = "python src/manage.py shell"
user = "python src/manage.py createsuperuser"

# Database
migrate = {composite = [
    "python src/manage.py makemigrations",
    "python src/manage.py migrate"
]}

# Search
elasti = "python src/manage.py search_index --rebuild"

# Docker compose
elk = {composite = [
    "chmod +x ./scripts/setup_elk.sh",
    "./scripts/setup_elk.sh",
]}
kdelete = {composite = [
    "chmod +x ./scripts/delete-k8s.sh",
    "./scripts/delete-k8s.sh",
]}
ksetup = {composite = [
    "chmod +x ./scripts/deploy-k8s.sh",
    "./scripts/deploy-k8s.sh",
]}

# Utilities
seed = "python src/manage.py populate_db"
mail = "celery -A core worker -l info"
app = "./scripts/startapp.sh"
ngrok = "ngrok http http://127.0.0.1:4000/"

# Project setup (one-time use)
setup = {composite = [
    "python -m django startproject core .",
    "mkdir src",
    "mv manage.py src/",
    "mv core/ src/"
]}